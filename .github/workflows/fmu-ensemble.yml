name: fmu-ensemble

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - published
  schedule:
    # Run CI every night and check that tests are working with latest dependencies
    - cron: "0 0 * * *"

jobs:
  fmu-ensemble:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: 📖 Checkout commit locally
        uses: actions/checkout@v2

      - name: 📖 Checkout tags
        # This seems necessary for setuptools_scm to be able to infer
        # the correct version.
        run: git fetch --unshallow --tags

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install fmu-ensemble with dependencies
        run: |
          pip install --upgrade pip
          pip install .

      - name: 📦 Install test dependencies
        run: |
          pip install ecl2df
          pip install .[tests,docs]

      - name: 🧾 List all installed packages
        run: pip freeze

      - name: 🕵️ Check code style
        run: |
          black --check src/ tests/test_*.py setup.py
          flake8 src tests/*.py

      - name: 🤖 Run tests
        run: |
          python -c "import fmu.ensemble"
          pytest tests/
          pip install .[parquet]
          pytest tests/test_virtualensemble.py

      - name: Syntax check on RST documentation
        run: rstcheck -r docs/

      - name: Build docs
        run: |
          sphinx-apidoc -H "API for fmu.ensemble" -o ./docs ./src/fmu
          mkdir tmp
          sphinx-build -W -b html -d tmp/doctrees docs build/sphinx/html
          touch build/sphinx/html/.nojekyll

      - name: 🚢 Build and deploy Python package
        if: github.event_name == 'release' && matrix.python-version == '3.8'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_fmuensemble_token }}
        run: |
          python -m pip install --upgrade setuptools wheel twine
          python setup.py sdist bdist_wheel
          twine upload dist/*

      - name: 📚 Update GitHub pages
        if: github.event_name == 'release' && github.repository == 'equinor' && matrix.python-version == '3.8'
        run: |
          cp -R ./build/sphinx/html ../html

          git config --local user.email "fmuensemble-github-action"
          git config --local user.name "fmuensemble-github-action"
          git fetch origin gh-pages
          git checkout --track origin/gh-pages
          git clean -f -f -d -x
          git rm -r *

          cp -R ../html/* .

          git add .

          if git diff-index --quiet HEAD; then
            echo "No changes in documentation. Skip documentation deploy."
          else
            git commit -m "Update Github Pages"
            git push "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" gh-pages
          fi
